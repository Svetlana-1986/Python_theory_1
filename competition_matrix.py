# Побочная диагональ
# Дана матрица размером NxN, требуется найти максимальное
# значение среди элементов, расположенных на побочной диагонали.
#
# Под побочной диагональю матрицы подразумевается диагональ, проведённая
# из правого верхнего угла до левого нижнего угла.
# Выходные данные
# Вывести самой большой элемент на побочной диагонали

n = int(input())
a = []

for i in range(n):  # добавление элементов в список
    a.append(list(map(int, input().split())))

b = [] # добавляем элементы побочной диагонали
for i in range(n):
    for j in range(n):
        if i + j == n - 1: # побочная диагональ
            b.append(a[i][j])
        else:
            continue
print(max(b))

# Заполнение матрицы nxn
# Ваша задача сформировать квадратную матрицу размером NxN, в которой используется
# следующее заполнение:
#
# все элементы, находящиеся выше главной диагонали, заполняются значением A;
# все элементы, находящиеся ниже главной диагонали, заполняются значением B;
# все элементы, находящиеся на главной диагонали, заполняются значением C.
# В качестве ответа, выведите на экран полученную матрицу
#
# Входные данные
# Программа сперва принимает на вход число N (N<=15) - количество строк и столбцов в матрицы,
# а затем на новой строке три целых числа  A, B и C. Данные числа используются для заполнения
#
# Выходные данные
# Заполните и распечатайте матрицу


n = int(input())
a, b, c = map(int, input().split())
m = []

for i in range(n):
    m.append([0] * n)

for i in range(n):
    for j in range(n):
        if i == j:
            m[i][j] = c
        elif i < j:
            m[i][j] = a
        else:
            m[i][j] = b
for row in m:
     print(*row)


# A. Матчи
# Манао работает на спортивном телевидении. Он долгое время наблюдал за футбольными
# матчами чемпионата одной страны и начал замечать разные закономерности.
# Например, у каждой команды есть две формы: домашняя и выездная. Когда команда проводит
# матч на своем стадионе, футболисты надевают домашнюю форму, а когда на чужом — выездную.
# Единственное исключение из этого правила — когда цвет домашней формы принимающей команды
# совпадает с цветом формы гостей. В таком случае домашняя команда облачается в свою выездную форму. Цвета домашней и выездной формы для каждой команды различны.
#
# В чемпионате страны участвует n команд и он состоит из n·(n - 1) матчей: каждая
# из команд принимает каждую другую команду на своем стадионе. Манао задумался, а сколько
# раз в течение одного чемпионата случится, что команда, играющая на своем стадионе, оденет
# выездную форму? Обратите внимание, что для подсчета этого количества порядок матчей не играет
# никакого значения.
#
# Вам даны цвета домашней и выездной формы каждой команды. Для удобства эти цвета пронумерованы
# целыми числами таким образом, что никакие два разных цвета не имеют одинаковый номер. Помогите
# Манао найти ответ на его вопрос.
#
# Входные данные
# В первой строке содержится целое число n (2 ≤ n ≤ 30). В каждой из следующих n
# строк записана пара разделенных одним пробелом различных целых чисел hi, ai
# (1 ≤ hi, ai ≤ 100) — номер цвета домашней и выездной форм i-ой команды
# соответственно.
#
# Выходные данные
# В единственной строке выведите количество матчей, в которых домашняя команда выступит
# в выездной форме.

n = int(input())
commands = []

for i in range(n):
    home, guest = map(int, input().split())
    commands.append([home, guest])

count = 0
for i in range(n - 1):
    for j in range(i + 1, n):
        if commands[i][0] == commands[j][1]:
            count += 1
        if commands[i][1] == commands[j][0]:
            count += 1
print(count)


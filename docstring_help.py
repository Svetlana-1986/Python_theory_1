# Обращение к docstring
# Как правило, у всех встроенных объектов существует docstring. Чтобы увидеть ее содержимое,  необходимо вызвать
# функцию help() и передать в нее интересующий вас объект.

def get_even(lst):
    '''Функция возвращает список из чётных чисел списка lst'''
    even_lst = []
    for elem in lst:
        if elem % 2 == 0:
            even_lst.append(elem)
    return even_lst


print(get_even.__doc__)
print('-'*15)
help(get_even)

# Обратите особое внимание, что на первой строке должен быть именно строковый тип данных, а не комментарий.
# Комментарии игнорируются интерпретатором, поэтому атрибут __doc__ будет принимать значение None и в вызове
# функции help() ничего не будет.

# Также необходимо запомнить, что к docstring будет относиться только первая строка после объявления функции
# (за исключением комментариев). Взгляните на этот пример

def get_even(lst):
    #comment
    'Функция возвращает '
    'список из чётных чисел списка lst'
    even_lst = []
    for elem in lst:
        if elem % 2 == 0:
            even_lst.append(elem)
    return even_lst


print(get_even.__doc__)
print('-'*15)
help(get_even)

# Если же в первой строке будет что-то другое, к примеру, присваивание переменной, то в docstring вообще ничего
# не попадёт

def get_even(lst):
    even_lst = []
    #comment
    'Функция возвращает '
    'список из чётных чисел списка lst'
    even_lst = []
    for elem in lst:
        if elem % 2 == 0:
            even_lst.append(elem)
    return even_lst


print(get_even.__doc__)
print('-'*15)
help(get_even)

# Использование docstring
# Можно выделить три места использования docstring
# В функциях. Данное применение мы рассмотрели в рамках этого урока
# В модулях. Под модулем подразумевается целиком вся ваша программа, которая сохранена в виде файла с расширением .py.
# У модуля тоже может быть строка документации. Ниже представлен пример получения справки по встроенному модулю math
# В классах. Такие объекты, как классы, мы будем изучать в рамках курса по ООП.

# Варианты оформления docstring
# Существует несколько вариантов оформления строки документирования, подробнее о них можно почитать здесь
#
# В PyCharm поддерживаются многие варианты автоматического оформления. Чтобы выбрать один из них, нужно зайти в раздел
# Настройки, написать docstring в строке поиска, выбрать раздел Tools и подраздел Python Integrated Tools, внутри
# которого, нажав на пункт docstring, можно выбрать один из следующих вариантов:
#
# Plain
# Epytext
# restructuredText
# NumPy
# Google.

